else if (outcome == "heart failure") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, table3$Hospital.Name), ]
if (num == "worst") {num <- length(table4$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table4[num,2], "state"=state_names[i]))
}
}
else if (outcome == "pneumonia") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, table3$Hospital.Name), ]
if (num == "worst") {num <- length(table4$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table4[num,2], "state"=state_names[i]))
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
return(ranking)
}
submit()
rankall <- function(outcome, num = "best") {
## Read outcome data
table_full <- read.csv("outcome-of-care-measures.csv", stringsAsFactors=FALSE, na.strings=c("Not Available"))
table_subset <- subset(table_full, select= c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table <- na.omit(table_subset)
ranking <- data.frame(NULL)
## Check that state and outcome are valid
#States
states <- as.factor(table[, 1])
state_names <- levels(as.factor(table[, 1]))
#logic_state_names <- state == state_names
#if (sum(logic_state_names) == 0) {stop("invalid state")}
#Outcome:
if ((outcome != "heart attack" & outcome != "heart failure" & outcome != "pneumonia") == TRUE) {
stop("invalid outcome")}
## For each state, find the hospital of the given rank
if (num == "best") {num <- 1}
table2 <- split(table, states)
if (outcome == "heart attack") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, table3$Hospital.Name), ]
if (num == "worst") {num <- length(table4$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table4[num,2], "state"=state_names[i]))
}
}
else if (outcome == "heart failure") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, table3$Hospital.Name), ]
if (num == "worst") {num <- length(table4$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table4[num,2], "state"=state_names[i]))
}
}
else if (outcome == "pneumonia") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, table3$Hospital.Name), ]
if (num == "worst") {num <- length(table4$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table4[num,2], "state"=state_names[i]))
}
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
return(ranking)
}
submit()
submit()
rankall("heart failure", 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
table_full <- read.csv("outcome-of-care-measures.csv", stringsAsFactors=FALSE, na.strings=c("Not Available"))
table_subset <- subset(table_full, select= c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table <- na.omit(table_subset)
ranking <- data.frame(NULL)
## Check that state and outcome are valid
#States
states <- as.factor(table[, 1])
state_names <- levels(as.factor(table[, 1]))
#logic_state_names <- state == state_names
#if (sum(logic_state_names) == 0) {stop("invalid state")}
#Outcome:
table2 <- split(table, states)
table3 <- table2[[54]]
table3
head(table3)
head(table2)
table2$WY
tail(rankall("pneumonia", "worst"), 3)
source("rankall.r")
tail(rankall("pneumonia", "worst"), 3)
table_full <- read.csv("outcome-of-care-measures.csv", stringsAsFactors=FALSE, na.strings=c("Not Available"))
table_subset <- subset(table_full, select= c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table <- na.omit(table_subset)
ranking <- data.frame(NULL)
## Check that state and outcome are valid
#States
states <- as.factor(table[, 1])
state_names <- levels(as.factor(table[, 1]))
table2 <- split(table, states)
table3 <- table2[[54]]
table3
table2$WY
rankall <- function(outcome, num = "best") {
## Read outcome data
table_full <- read.csv("outcome-of-care-measures.csv", stringsAsFactors=FALSE, na.strings=c("Not Available"))
table_subset <- subset(table_full, select= c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table <- table_subset #fent proves...
#table <- na.omit(table_subset)
ranking <- data.frame(NULL)
## Check that state and outcome are valid
#States
states <- as.factor(table[, 1])
state_names <- levels(as.factor(table[, 1]))
#logic_state_names <- state == state_names
#if (sum(logic_state_names) == 0) {stop("invalid state")}
#Outcome:
if ((outcome != "heart attack" & outcome != "heart failure" & outcome != "pneumonia") == TRUE) {
stop("invalid outcome")}
## For each state, find the hospital of the given rank
if (num == "best") {num <- 1}
table2 <- split(table, states)
if (outcome == "heart attack") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, table3$Hospital.Name), ]
if (num == "worst") {num <- length(table4$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table4[num,2], "state"=state_names[i]))
}
}
else if (outcome == "heart failure") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, table3$Hospital.Name), ]
if (num == "worst") {num <- length(table4$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table4[num,2], "state"=state_names[i]))
}
}
else if (outcome == "pneumonia") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, table3$Hospital.Name), ]
if (num == "worst") {num <- length(table4$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table4[num,2], "state"=state_names[i]))
}
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
return(ranking)
}
tail(rankall("pneumonia", "worst"), 3)
rankall <- function(outcome, num = "best") {
## Read outcome data
table_full <- read.csv("outcome-of-care-measures.csv", stringsAsFactors=FALSE, na.strings=c("Not Available"))
table_subset <- subset(table_full, select= c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table <- table_subset #fent proves...
#table <- na.omit(table_subset)
ranking <- data.frame(NULL)
## Check that state and outcome are valid
#States
states <- as.factor(table[, 1])
state_names <- levels(as.factor(table[, 1]))
#logic_state_names <- state == state_names
#if (sum(logic_state_names) == 0) {stop("invalid state")}
#Outcome:
if ((outcome != "heart attack" & outcome != "heart failure" & outcome != "pneumonia") == TRUE) {
stop("invalid outcome")}
## For each state, find the hospital of the given rank
if (num == "best") {num <- 1}
table2 <- split(table, states)
if (outcome == "heart attack") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, table3$Hospital.Name), ]
if (num == "worst") {num <- length(table4$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table4[num,2], "state"=state_names[i]))
}
}
else if (outcome == "heart failure") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, table3$Hospital.Name), ]
if (num == "worst") {num <- length(table4$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table4[num,2], "state"=state_names[i]))
}
}
else if (outcome == "pneumonia") {
for (i in 1:54) {
table3 <- table2[[i]]
table3 <- na.omit(table3) #fent proves
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, table3$Hospital.Name), ]
if (num == "worst") {num <- length(table4$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table4[num,2], "state"=state_names[i]))
}
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
return(ranking)
}
tail(rankall("pneumonia", "worst"), 3)
rankall <- function(outcome, num = "best") {
## Read outcome data
table_full <- read.csv("outcome-of-care-measures.csv", stringsAsFactors=FALSE, na.strings=c("Not Available"))
table_subset <- subset(table_full, select= c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table <- table_subset #fent proves...
#table <- na.omit(table_subset)
ranking <- data.frame(NULL)
## Check that state and outcome are valid
#States
states <- as.factor(table[, 1])
state_names <- levels(as.factor(table[, 1]))
#logic_state_names <- state == state_names
#if (sum(logic_state_names) == 0) {stop("invalid state")}
#Outcome:
if ((outcome != "heart attack" & outcome != "heart failure" & outcome != "pneumonia") == TRUE) {
stop("invalid outcome")}
## For each state, find the hospital of the given rank
if (num == "best") {num <- 1}
table2 <- split(table, states)
if (outcome == "heart attack") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, table3$Hospital.Name), ]
if (num == "worst") {num <- length(table4$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table4[num,2], "state"=state_names[i]))
}
}
else if (outcome == "heart failure") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, table3$Hospital.Name), ]
if (num == "worst") {num <- length(table4$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table4[num,2], "state"=state_names[i]))
}
}
else if (outcome == "pneumonia") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, table3$Hospital.Name), ]
if (num == "worst") {num <- length(table4$Hospital.Name)}
table4 <- subset(table4, select = c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table4 <- na.omit(table4)
ranking <- rbind(ranking, data.frame("hospital"=table4[num,2], "state"=state_names[i]))
}
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
return(ranking)
}
tail(rankall("pneumonia", "worst"), 3)
head(rankall("heart attack", 20), 10)
## Read outcome data
table_full <- read.csv("outcome-of-care-measures.csv", stringsAsFactors=FALSE, na.strings=c("Not Available"))
table_subset <- subset(table_full, select= c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table <- table_subset #fent proves...
#table <- na.omit(table_subset)
ranking <- data.frame(NULL)
## Check that state and outcome are valid
#States
states <- as.factor(table[, 1])
state_names <- levels(as.factor(table[, 1]))
#logic_state_names <- state == state_names
## Read outcome data
table_full <- read.csv("outcome-of-care-measures.csv", stringsAsFactors=FALSE, na.strings=c("Not Available"))
table_subset <- subset(table_full, select= c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table <- table_subset #fent proves...
#table <- na.omit(table_subset)
ranking <- data.frame(NULL)
## Check that state and outcome are valid
#States
states <- as.factor(table[, 1])
state_names <- levels(as.factor(table[, 1]))
#logic_state_names <- state == state_names
## Read outcome data
table_full <- read.csv("outcome-of-care-measures.csv", stringsAsFactors=FALSE, na.strings=c("Not Available"))
table_subset <- subset(table_full, select= c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table <- table_subset #fent proves...
#table <- na.omit(table_subset)
ranking <- data.frame(NULL)
## Check that state and outcome are valid
#States
states <- as.factor(table[, 1])
state_names <- levels(as.factor(table[, 1]))
#logic_state_names <- state == state_names
table2 <- split(table, states)
table3 <- table2[[54]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, table3$Hospital.Name), ]
head(table4)
table5 <- subset(table4, select = c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
head(table5)
head(table5, 10)
head(table5, 20)
tail(table5)
table6 <- na.omit(table5)
table6
table2 <- split(table, states)
tail(rankall("pneumonia", "worst"), 3)
source("rankall.r")
tail(rankall("pneumonia", "worst"), 3)
table_full <- read.csv("outcome-of-care-measures.csv", stringsAsFactors=FALSE, na.strings=c("Not Available"))
table_subset <- subset(table_full, select= c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table <- table_subset #fent proves...
#table <- na.omit(table_subset)
ranking <- data.frame(NULL)
## Check that state and outcome are valid
#States
states <- as.factor(table[, 1])
state_names <- levels(as.factor(table[, 1]))
#logic_state_names <- state == state_names
#if (sum(logic_state_names) == 0) {stop("invalid state")}
#Outcome:
table_full <- read.csv("outcome-of-care-measures.csv", stringsAsFactors=FALSE, na.strings=c("Not Available"))
table_subset <- subset(table_full, select= c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table <- table_subset #fent proves...
#table <- na.omit(table_subset)
ranking <- data.frame(NULL)
## Check that state and outcome are valid
#States
states <- as.factor(table[, 1])
state_names <- levels(as.factor(table[, 1]))
#logic_state_names <- state == state_names
#if (sum(logic_state_names) == 0) {stop("invalid state")}
#Outcome:
table2 <- split(table, states)
table3 <- table2[[54]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, table3$Hospital.Name), ]
table4 <- subset(table4, select = c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table4 <- na.omit(table4)
length(table4$Hospital.Name)
table4[24]
table4[,24]
table4[24,]
table4[24,2]
rankall <- function(outcome, num = "best") {
## Read outcome data
table_full <- read.csv("outcome-of-care-measures.csv", stringsAsFactors=FALSE, na.strings=c("Not Available"))
table_subset <- subset(table_full, select= c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table <- table_subset #fent proves...
#table <- na.omit(table_subset)
ranking <- data.frame(NULL)
## Check that state and outcome are valid
#States
states <- as.factor(table[, 1])
state_names <- levels(as.factor(table[, 1]))
#logic_state_names <- state == state_names
#if (sum(logic_state_names) == 0) {stop("invalid state")}
#Outcome:
if ((outcome != "heart attack" & outcome != "heart failure" & outcome != "pneumonia") == TRUE) {
stop("invalid outcome")}
## For each state, find the hospital of the given rank
if (num == "best") {num <- 1}
table2 <- split(table, states)
if (outcome == "heart attack") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, table3$Hospital.Name), ]
if (num == "worst") {num <- length(table4$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table4[num,2], "state"=state_names[i]))
}
}
else if (outcome == "heart failure") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, table3$Hospital.Name), ]
if (num == "worst") {num <- length(table4$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table4[num,2], "state"=state_names[i]))
}
}
else if (outcome == "pneumonia") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, table3$Hospital.Name), ]
table5 <- subset(table4, select = c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table6 <- na.omit(table5)
if (num == "worst") {num <- length(table6$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table6[num,2], "state"=state_names[i]))
}
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
return(ranking)
}
tail(rankall("pneumonia", "worst"), 3)
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, table3$Hospital.Name), ]
table5 <- subset(table4, select = c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table6 <- na.omit(table5)
table6[24,2]
length(table6)
length(table6$Hospital.Name)
num <- length(table6$Hospital.Name)
table6[num,2]
rankall <- function(outcome, num = "best") {
## Read outcome data
table_full <- read.csv("outcome-of-care-measures.csv", stringsAsFactors=FALSE, na.strings=c("Not Available"))
table_subset <- subset(table_full, select= c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table <- table_subset #fent proves...
#table <- na.omit(table_subset)
ranking <- data.frame(NULL)
## Check that state and outcome are valid
#States
states <- as.factor(table[, 1])
state_names <- levels(as.factor(table[, 1]))
#logic_state_names <- state == state_names
#if (sum(logic_state_names) == 0) {stop("invalid state")}
#Outcome:
if ((outcome != "heart attack" & outcome != "heart failure" & outcome != "pneumonia") == TRUE) {
stop("invalid outcome")}
## For each state, find the hospital of the given rank
if (num == "best") {num <- 1}
table2 <- split(table, states)
if (outcome == "heart attack") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, table3$Hospital.Name), ]
table5 <- subset(table4, select = c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"))
table6 <- na.omit(table5)
if (num == "worst") {num <- length(table6$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table6[num,2], "state"=state_names[i]))
}
}
else if (outcome == "heart failure") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, table3$Hospital.Name), ]
table5 <- subset(table4, select = c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"))
table6 <- na.omit(table5)
if (num == "worst") {num <- length(table6$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table6[num,2], "state"=state_names[i]))
}
}
else if (outcome == "pneumonia") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, table3$Hospital.Name), ]
table5 <- subset(table4, select = c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table6 <- na.omit(table5)
if (num == "worst") {num <- length(table6$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table6[num,2], "state"=state_names[i]))
}
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
return(ranking)
}
rankall <- function(outcome, num = "best") {
## Read outcome data
table_full <- read.csv("outcome-of-care-measures.csv", stringsAsFactors=FALSE, na.strings=c("Not Available"))
table_subset <- subset(table_full, select= c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table <- table_subset #fent proves...
#table <- na.omit(table_subset)
ranking <- data.frame(NULL)
## Check that state and outcome are valid
#States
states <- as.factor(table[, 1])
state_names <- levels(as.factor(table[, 1]))
#logic_state_names <- state == state_names
#if (sum(logic_state_names) == 0) {stop("invalid state")}
#Outcome:
if ((outcome != "heart attack" & outcome != "heart failure" & outcome != "pneumonia") == TRUE) {
stop("invalid outcome")}
## For each state, find the hospital of the given rank
if (num == "best") {num <- 1}
table2 <- split(table, states)
if (outcome == "heart attack") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, table3$Hospital.Name), ]
table5 <- subset(table4, select = c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"))
table6 <- na.omit(table5)
if (num == "worst") {num <- length(table6$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table6[num,2], "state"=state_names[i]))
}
}
else if (outcome == "heart failure") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure, table3$Hospital.Name), ]
table5 <- subset(table4, select = c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"))
table6 <- na.omit(table5)
if (num == "worst") {num <- length(table6$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table6[num,2], "state"=state_names[i]))
}
}
else if (outcome == "pneumonia") {
for (i in 1:54) {
table3 <- table2[[i]]
table4 <- table3[ order(table3$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia, table3$Hospital.Name), ]
table5 <- subset(table4, select = c("State", "Hospital.Name","Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"))
table6 <- na.omit(table5)
if (num == "worst") {num <- length(table6$Hospital.Name)}
ranking <- rbind(ranking, data.frame("hospital"=table6[num,2], "state"=state_names[i]))
}
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
return(ranking)
}
tail(rankall("pneumonia", "worst"), 3)
head(rankall("heart attack", 20), 10)
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
source("rankall.R")
rankall("pneumonia", "worst")
source("rankall.R")
rankall("pneumonia", "worst")
source("rankall.R")
rankall("pneumonia", "worst")
submit()
