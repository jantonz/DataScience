#The cacheSolve checks if the solution is already in the cache; if so, we return
#a message "getting cached data" and the value of "inv" ("inv" it's the inverse of
#our original matrix). If the solution is not in the cache, then we get the matrix
#with x$get(), we solve it and print it.
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinverse()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data, ...)
x$setinverse(inv)
print(inv)
}
a <- matrix(c(0.25, 0, 0, 0.25 ), 2,2)
a
cacheSolve(makeCacheMatrix(a))
cacheSolve(makeCacheMatrix(a))
cacheSolve(makeCacheMatrix(a))
b<-makeCacheMatrix(a)
b
a
cacheSolve(b)
cacheSolve(b)
?knittr
library(knittr)
install.packages("knitr")
?stitch
library(knitr)
rmarkdown
install.packages("rmarkdown")
?qunif
qunif(1)
qunif()
qunif(1)
qunif(1, 0.75)
?qunif
qunif(0.7)
qunif(90)
qunif(8)
qunif(0.8)
?qnorm
qnorm()
qnorm(1)
qnorm(0)
qnorm(0.5)
qnorm(0.75)
qnorm(0.5)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
x
sum(x)
x/10
x/sum(x)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
mean(runif(40))
mean(runif(40))
mean(runif(40))
mean(runif(40))
mean(runif(40))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
mean(runif(40))
mean(runif(40))
mean(runif(40))
mean(runif(40))
mean(runif(40))
mean(runif(40))
mean(runif(40))
runif(1000)
par(mfrow=c(3,1))
exp = NULL
for (i in 1 : nsim) exp = c(exp, var(rexp(5, lambda)))
hist(exp, main="n = 5", xlab="x", breaks=40)
abline(v=25, col="red", lwd=3)
exp = NULL
for (i in 1 : nsim) exp = c(exp, var(rexp(10, lambda)))
hist(exp, main="n = 10", xlab="x", breaks=40)
abline(v=25, col="red", lwd=3)
exp = NULL
for (i in 1 : nsim) exp = c(exp, var(rexp(40, lambda)))
hist(exp, main="n = 40", xlab="x", breaks=40)
abline(v=25, col="red", lwd=3)
source('~/.active-rstudio-document', echo=TRUE)
exp = NULL
for (i in 1 : nsim) exp = c(exp, mean(rexp(n, lambda)))
exp
hist(meanexpsim, main="Histogram of 1000 averages of 40 random exponentials", xlab="x")
library(ToothGrowth)
library(datasets)
ToothGrowth
View(ToothGrowth)
str(ToothGrowth)
library(datasets)
library(ggplot2)
qplot(ToothGrowth)
?qplot
qplot(dose, len, data=ToothGrowth, geom="supp")
qplot(dose, len, data=ToothGrowth)
qplot(len, data=ToothGrowth)
qplot(len, data=ToothGrowth, binwidth=1)
qplot(len, data=ToothGrowth, binwidth=12)
qplot(len, data=ToothGrowth, binwidth=0.1)
qplot(len, data=ToothGrowth, binwidth=0.5)
qplot(factor(dose), len, data=ToothGrowth, binwidth=0.5, )
qplot(len, data=ToothGrowth, binwidth=0.5, )
qplot(len, data=ToothGrowth, binwidth=0.5, colour=dose, facets=.~supp)
qplot(len, data=ToothGrowth, binwidth=0.5, colour=dose)
qplot(len, data=ToothGrowth, binwidth=0.5, facets=.~supp)
qplot(len, data=ToothGrowth, binwidth=0.5, facets=.~supp, colour=dose)
qplot(len, data=ToothGrowth, binwidth=0.5, facets=.~supp, colour=factor(dose))
qplot(len, data=ToothGrowth, binwidth=0.5, facets=.~dose, colour=supp)
qplot(len, data=ToothGrowth, binwidth=1, facets=.~dose, colour=supp)
qplot(len, data=ToothGrowth, facets=.~dose, colour=supp)
qplot(len, data=ToothGrowth, binwidth=1, facets=.~dose, colour=supp)
qplot(dose, len, data=ToothGrowth)
qplot(len, dose, data=ToothGrowth)
qplot(len, data=ToothGrowth, binwidth=1, facets=.~dose, colour=supp)
qplot(len, data=ToothGrowth, binwidth=1, facets=.~dose, colour=supp, geom=)
?geom
?qplot
qplot(len, data=ToothGrowth, binwidth=1, facets=.~dose, colour=supp, geom="jitter")
qplot(len, data=ToothGrowth, binwidth=1, facets=.~dose, colour=supp, geom="boxplot")
qplot(len, data=ToothGrowth, binwidth=1, facets=.~dose, colour=supp, geom="dotplot")
qplot(len, data=ToothGrowth, binwidth=1, facets=.~dose, colour=supp, geom="path")
qplot(len, data=ToothGrowth, binwidth=1, facets=.~dose, colour=supp, geom="dotplot")
qplot(len, data=ToothGrowth, binwidth=1, facets=.~dose, colour=supp, geom="histogram")
qplot(len, data=ToothGrowth, binwidth=1, facets=.~dose, colour=supp, geom="dotplot")
qplot(len, data=ToothGrowth, binwidth=1, facets=.~dose, colour=supp)
par(mfrow=c(1,2))
qplot(len, data=ToothGrowth, binwidth=1, colour=supp)
qplot(len, data=ToothGrowth, binwidth=1, facets=.~dose, colour=supp)
qplot(len, supp, data=ToothGrowth, binwidth=1)
qplot(dose, len, data=ToothGrowth, binwidth=1)
qplot(supp, len, data=ToothGrowth, binwidth=1)
abline(supp,len)
?abline
abline(ToothGrowth$supp, ToothGrowth$len)
ToothGrowth$len
len <- ToothGrowth$len
supp <- ToothGrowth$supp
dose <- ToothGrowth$dose
abline(len, dose)
?abline
lm(len,dose)
?lm
lm(len~dose, data=ToothGrowth)
z<-lm(len~dose, data=ToothGrowth)
abline(z)
z<-lm(len~supp, data=ToothGrowth)
abline(z)
abline(6)
abline(6,34)
abline(z, lwd=2)
abline(z, lwd=2, colour="red")
abline(z, lwd=2, color="red")
abline(z, lwd=2)
plot(ToothGrowth$supp, ToothGrowth$len)
abline(z, lwd=2)
?plot
plot(ToothGrowth$supp, ToothGrowth$len)
plot(ToothGrowth$dose, ToothGrowth$len)
z<-lm(dose~len, data=ToothGrowth)
abline(z)
abline(z, lwd=2)
abline(z, lwd=2)
abline(z, lwd=111)
abline(z, lwd=10)
abline(z, lwd=1)
plot(ToothGrowth$dose, ToothGrowth$len)
abline(z, lwd=1)
abline(z, lwd=10)
abline(z, lwd=100)
library(dplyr)
?summarise
summarise(ToothGrowth, mean())
summarise(ToothGrowth, mean(len))
group_by(ToothGrowth, dose)
a<-group_by(ToothGrowth, dose)
summarise(a, mean(len))
b<-summarise(a, mean(len))
plot(b)
ToothGrowth %>% group_by(dose) %>% summarise(mean(len)) %>% plot()
ToothGrowth %>% group_by(dose) %>% summarise(mean(len)) %>% plot()
ToothGrowth %>% group_by(dose) %>% summarise(mean(len)) %>% plot()
ToothGrowth %>% group_by(dose) %>% summarise(mean(len)) %>% plot()
abline(lm(ToothGrowth$dose, ToothGrowth$len))
ToothGrowth %>% group_by(dose) %>% summarise(mean(len)) %>% plot()
z <- lm(ToothGrowth$dose, ToothGrowth$len)
abline(z)
ToothGrowth %>% group_by(dose) %>% summarise(mean(len)) %>% plot()
abline(lm(dose~len, data=ToothGrowth))
ToothGrowth %>% group_by(dose) %>% summarise(mean(len)) %>% plot()
abline(lm(dose~mean(len)))
ToothGrowth %>% group_by(dose) %>% summarise(mean(len)) %>% plot() %>%
abline(lm(dose~mean(len)))
ToothGrowth %>% group_by(dose) %>% summarise(mean(len)) %>% <- TGmean
abline(lm(dose~mean(len)))
ToothGrowth %>% group_by(dose) %>% summarise(mean(len)) %>% <- TGmean
abline(lm(dose~mean(len), data=TGmean))
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(mean(len)) %>% plot()
abline(lm(dose~mean(len), data=TGmean))
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(mean(len)) %>% plot()
TGmean
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(mean(len))
TGmean
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(mean(len))
plot(TGmean)
abline(lm(dose~mean(len)), data=TGmean)
TGmean
abline(lm(dose~mean(len)), data=TGmean)
lm(dose~mean(len), data=TGmean)
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(mean=mean(len))
plot(TGmean)
abline(lm(dose~mean(len)), data=TGmean)
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(mean=mean(len))
plot(TGmean)
abline(lm(dose~mean), data=TGmean)
TGmean
dose
TGmean&dose
TGmean&mea
TGmean&mean
TGmean$mean
TGmean$dose
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(mean=mean(len))
plot(TGmean)
abline(lm(dose~mean, data=TGmean)
lm(dose~mean), data=TGmean))
lm(dose~mean, data=TGmean)
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(mean=mean(len))
plot(TGmean)
abline(lm(dose~mean, data=TGmean))
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(mean=mean(len))
plot(TGmean)
abline(lm(dose~mean, data=TGmean), lwd=10)
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(mean=mean(len))
plot(TGmean)
abline(lm(dose~mean, data=TGmean), lwd=100)
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(mean=mean(len))
plot(TGmean)
z <- lm(dose~mean, data=TGmean)
abline(z)
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(mean=mean(len))
plot(TGmean)
z <- lm(dose~mean, data=TGmean)
abline(z)
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(mean=mean(len))
plot(TGmean)
z <- lm(dose~mean, data=TGmean)
abline(z, lwd=6)
?abline
par()
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(mean=mean(len))
plot(TGmean)
z <- lm(dose~mean, data=TGmean)
abline(z, lwd=6)
abline(z)
abline(z. lwd=100)
abline(z, lwd=100)
abline(z, lwd=10000)
TGmean
z
abline(z)
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(mean=mean(len))
plot(TGmean)
z <- lm(mean~dose, data=TGmean)
abline(z, lwd=6)
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(mean=mean(len))
plot(TGmean)
z <- lm(mean~dose, data=TGmean)
abline(z, lwd=1)
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(length=mean(len))
plot(TGmean)
z <- lm(length~dose, data=TGmean)
abline(z, lwd=1)
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(length=mean(len))
plot(TGmean)
z <- lm(length~dose, data=TGmean)
abline(z, lwd=1)
TGmean2 <- ToothGrowth %>% group_by(supp) %>% summarise(length=mean(len))
plot(TGmean2)
z <- lm(length~dose, data=TGmean)
abline(z, lwd=1)
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(length=mean(len))
plot(TGmean)
z <- lm(length~dose, data=TGmean)
abline(z, lwd=1)
TGmean2 <- ToothGrowth %>% group_by(supp) %>% summarise(length=mean(len))
plot(TGmean2)
zz <- lm(length~supp, data=TGmean2)
abline(zz, lwd=1)
TGmean
TGmean2
par(mfrow=c(1,2))
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(length=mean(len))
plot(TGmean)
z <- lm(length~dose, data=TGmean)
abline(z, lwd=1)
TGmean2 <- ToothGrowth %>% group_by(supp) %>% summarise(length=mean(len))
plot(TGmean2)
zz <- lm(length~supp, data=TGmean2)
abline(zz, lwd=1)
par(mfrow=c(2,1))
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(length=mean(len))
plot(TGmean)
z <- lm(length~dose, data=TGmean)
abline(z, lwd=1)
TGmean2 <- ToothGrowth %>% group_by(supp) %>% summarise(length=mean(len))
plot(TGmean2)
zz <- lm(length~supp, data=TGmean2)
abline(zz, lwd=1)
par(mfrow=c(1,2))
TGmean <- ToothGrowth %>% group_by(dose) %>% summarise(length=mean(len))
plot(TGmean)
z <- lm(length~dose, data=TGmean)
abline(z, lwd=1)
TGmean2 <- ToothGrowth %>% group_by(supp) %>% summarise(length=mean(len))
plot(TGmean2)
zz <- lm(length~supp, data=TGmean2)
abline(zz, lwd=1)
TGmean2
?ttest
?tstudent
?student
?test
?IC
?
CI
data(sleep)
head(sleep)
str(sleep)
plot(sleep)
t.test(sleep)
?sleep
data(ChickWeight)
View(ChickWeight)
?ToothGrowth
require(graphics)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
xlab = "ToothGrowth data: length vs dose, given type of supplement")
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
+        xlab = "ToothGrowth data: length vs dose, given type of supplement")
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth, xlab = "ToothGrowth data: length vs dose, given type of supplement")
?coplot
qplot(len, data=ToothGrowth, binwidth=1, facets=.~dose, colour=supp)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth, xlab = "ToothGrowth data: length vs dose, given type of supplement")
TGmean1
TGmean1
TGmean2
?group_by
group_by(ToothGrowth, supp)
summarize(group_by(ToothGrowth, supp), mean(len))
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth, xlab = "ToothGrowth data: length vs dose, given type of supplement")
qplot(len, data=ToothGrowth, binwidth=1, facets=.~dose, colour=supp)
qplot(len, supp, data=ToothGrowth)
qplot(supp, len, data=ToothGrowth)
qplot(supp, len, data=ToothGrowth)
plot(summarize(group_by(ToothGrowth, supp), mean(len)))
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth, xlab = "ToothGrowth data: length vs dose, given type of supplement")
source('~/.active-rstudio-document', echo=TRUE)
qplot(len, data=ToothGrowth, binwidth=1, facets=.~dose, colour=supp)
coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth, xlab = "ToothGrowth data: length vs dose, given type of supplement")
?t.test
?split
split(ToothGrowth, ToothGrowth$supp)
class(split(ToothGrowth, ToothGrowth$supp))
TG <- split(ToothGrowth, ToothGrowth$supp)
TG[1]
TGOJ <- TG[1]
TGVC <- TG[2]
TGVC
split(TGOJ, factor(dose))
split(TGOJ, factor(TGOJ$dose))
TGOJ
TGOJ$dose
class(TGOJ)
TGOJ <- as.data.frame(TG[1])
class(TGOJ)
TGOJ
TGOJ$OJ.dose
split(TGOJ, factor(TGOJ$OJ.dose))
?split
t.test(ToothGrowth$len)
t.test(ToothGrowth$len, ToothGrowth$dose)
library(reshape)
install.packages("reshape")
install.packages("reshape2")
install.packages("reshape2")
source('~/.active-rstudio-document', echo=TRUE)
library(reshape2)
?dcast
a <- dcast(ToothGrowth, len + supp ~ dose, value.var="len")
a
View(a)
split(TGOJ, factor(dose))
split(TGOJ, factor(OJ.dose))
TGOJ
split(TGOJ, factor(TGOJ$OJ.dose))
TGOJdose <- split(TGOJ, factor(TGOJ$OJ.dose))
aTGOJdose <- TGOJdose[1]; bTGOJdose <- TGOJdose[2]; cTGOJdose <- TGOJdose[3]
aTGOJdose
TGOJdose <- split(TGOJ, factor(TGOJ$OJ.dose))
aTGOJdose <- as.data.frame(TGOJdose[1]); bTGOJdose <- as.data.frame(TGOJdose[2]); cTGOJdose <- as.data.frame(TGOJdose[3])
a
aTGOJdose
t.test(aTGOJdose$X0.5.OJ.len, bTGOJdose$X1.OJ.len, )
?t.test
t.test(aTGOJdose$X0.5.OJ.len, bTGOJdose$X1.OJ.len, var.equal=TRUE)
t.test(bTGOJdose$X1.OJ.len, cTGOJdose$X2.OJ.len, var.equal=TRUE)
TGVCdose <- split(TGVC, factor(TGVC$VC.dose))
aTGVCdose <- as.data.frame(TGVCdose[1]); bTGVCdose <- as.data.frame(TGVCdose[2]); cTGVCdose <- as.data.frame(TGVCdose[3])
t.test(aTGVCdose$X0.5.VC.len, bTGVCdose$X1.VC.len, var.equal=TRUE)
t.test(bTGVCdose$X1.VC.len, cTGVCdose$X2.VC.len, var.equal=TRUE)
t.test(cTGOJdose$X2.OJ.len, cTGVCdose$X2.VC.len, var.equal=TRUE)
t.test(bTGOJdose$X1.OJ.len, bTGVCdose$X1.VC.len, var.equal=TRUE)
t.test(aTGOJdose$X0.5.OJ.len, aTGVCdose$X0.5.VC.len, var.equal=TRUE)
t.test(aTGOJdose$X0.5.OJ.len, aTGVCdose$X0.5.VC.len, var.equal=TRUE)
?t.test
?rnorm
rnorm(9, mean=1100, sd=30)
a<-rnorm(9, mean=1100, sd=30)
t.student(a)
t.test(a)
a<-rnorm(9, mean=1100, sd=30)
t.test(a)
a<-rnorm(9, mean=1100, sd=30)
t.test(a)
a<-rnorm(9, mean=1100, sd=30)
t.test(a)
new<-rnorm(10, mean=3, sd=0.6)
old<-rnorm(10, mean=5, sd=0.68)
resta<-new-old
resta
t.test(resta)
t.test(resta)
2.75-1.25
2.70-1.29
new<-rnorm(100, mean=4, sd=0.5)
old<-rnorm(100, mean=6, sd=2)
resta<-new-old
t.test(resta)
resta=old-new
t.test(resta)
treated <- rnorm(9, -3, 1.5)
placebo <- rnorm(9, 1, 1.8)
rest=treated-placebo
rest
?t.test
t.test(rest, conf.level=0.90)
?data.frame
data.frame(Subject=c(1,2,3,4,5), Baseline=c(140, 138, 150, 148, 135), Week2=c(132, 135, 151, 146, 130))
my_df <- data.frame(Subject=c(1,2,3,4,5), Baseline=c(140, 138, 150, 148, 135), Week2=c(132, 135, 151, 146, 130))
t.test(my_df)
?t.test
t.test(my_df$Baseline, my_df$Week2, paired=TRUE, alternative="two.sided")
t.test(my_df$Baseline, my_df$Week2, paired=TRUE)
t.test(my_df$Baseline, my_df$Week2, paired=TRUE, alternative="less")
t.test(my_df$Baseline, my_df$Week2, paired=TRUE, alternative="greater")
df <- data.frame(Subject=c(1,2,3,4), Coke=c(1, 1, 1, 0), Pepsi=c(0, 0, 0, 1))
df
t.test(df$Coke, df$Pepsi)
t.test(df$Coke, df$Pepsi, alternative="less")
t.test(df$Coke, df$Pepsi, alternative="grater")
t.test(df$Coke, df$Pepsi, alternative="greater")
t.test(df$Coke, df$Pepsi, alternative="greater", mu=1)
t.test(df$Coke, df$Pepsi, alternative="less", mu=1)
mean=1100
sd=30
?t.test
?interval
mean+(sd/sqrt(9))
mean-(sd/sqrt(9))
mean-0.05(sd/sqrt(9))
mean-0.05*(sd/sqrt(9))
mean+0.05*(sd/sqrt(9))
mean+2.13*(sd/sqrt(9))
mean+2.13*(sd/sqrt(9))
mean-2.13*(sd/sqrt(9))
?df
?df
mean-2.16*(sd/sqrt(9))
mean+2.16*(sd/sqrt(9))
?qt
?power.t.test
power.t.test(sd=0.04, sig.level=0.05, power=0.9, delta=0.1)
power.t.test(sd=0.04, sig.level=0.05, power=0.9, delta=0.1, alternative="one-sided")
power.t.test(sd=0.04, sig.level=0.05, power=0.9, delta=0.1, alternative="one.sided")
power.t.test(sd=0.04, sig.level=0.05, power=0.9, delta=0.1, alternative="one.sided", type="one.sample")
power.t.test(power = 0.9, delta = 0.01, sd = 0.04, type = "one.sample", alt = "one.sided")$n
power.t.test(power = 0.9, delta = 0.01, sd = 0.04, type = "one.sample", alt = "one.sided")
power.t.test(sd=0.04, sig.level=0.05, power=0.9, delta=0.1, alternative="one.sided", type="one.sample")
power.t.test(sd=0.04, power=0.9, delta=0.1, alternative="one.sided", type="one.sample")
power.t.test(sd=0.04, power=0.9, delta=0.01, alternative="one.sided", type="one.sample")
setwd("~/Dropbox/PhD/Formacio/Coursera - Data Science Specialization/7. Regression Models")
library(UsingR)
install.packages(UsingR)
install.packages("UsingR")
library(UsingR)
Galton
View(Galton)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
