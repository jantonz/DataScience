install.packages("NADA")
install.packages("NADA")
install.packages("NADA")
install.packages("xlsx")
install.packages("dplyr")
install.packages("ggplot2")
library(grid)
library(lubridate)
install.packages("lubridate")
?object.size
setwd("C:/Users/janton/Dropbox/PhD/Formacio/R/Coursera - Data Science Specialization/8. Practical Machine Learning/Course Project")
data <- read.csv("pml-training.csv")
object.size(data)
object.size(data)/1024
object.size(data)/1024/1024
library(plyr)
library(dplyr)
data <- data[colSums(!is.na(data)) > 0]
data <- select(data, -contains("time"))
data <- select(data, -contains("window"))
data <- select(data, -1)
data_final <- select(data, -matches("user_name"))
NAs <- apply(data, 2, function(x) {sum(is.na(x))})
data_fit <- data[, which(NAs == 0)]
object.size(data_fit)/1024/1024
object.size(NAs)/1024/1024
gc()
library(caret)
trControl <- trainControl(method = "cv", number = 4)
ctrl <- trainControl(method = "cv", number = 4)
fitRF <- train(classe ~ ., data=data_fit, method="rf", trControl=ctrl)
memory.size()
?memory.size
?memory.limit
?memory.limit(1024)
memory.limit(1024)
memory.limit(2048)
memory.limit()
fitRF <- train(classe ~ ., data=data_fit, method="rf", trControl=ctrl)
gc()
gc()
fitRF <- train(classe ~ ., data=data_fit, method="rf", trControl=ctrl)
ojbect.size(fitRF <- train(classe ~ ., data=data_fit, method="rf", trControl=ctrl))
?object.size
object.size(fitRF <- train(classe ~ ., data=data_fit, method="rf", trControl=ctrl))
fitRF <- train(classe ~ ., data=data_fit, method="rf", trControl=ctrl)
gc()
gc()
fitRF <- train(classe ~ ., data=data_fit, method="rf", trControl=ctrl)
memory.size()
memory.size(3000)
memory.size(3000)
gc()
memory.size()
fitRF <- train(classe ~ ., data=data_fit, method="rf", trControl=ctrl)
fitRF <- train(classe ~ ., data=data_fit, method="rf", trControl=ctrl)
fitGBM <- train(classe ~ ., data=data_fit, method="gbm", trControl=ctrl, verbose=FALSE)
training <- createDataPartition(y = data_fit$classe, p = 0.7, list = FALSE)
db <- createDataPartition(y = data_fit$classe, p = 0.7, list = FALSE)
training <- db[training, ]
training <- db[training, ]
training <- data_fit[db, ]
gc()
fitRF <- train(classe ~ ., data=training, method="rf", trControl=ctrl)
gc()
fitRF <- train(classe ~ ., data=training, method="rf", trControl=ctrl)
data <- read.csv("pml-training.csv")
NAs <- apply(data, 2, function(x) {sum(is.na(x))})
data_fit <- data[, which(NAs == 0)]
a <- createDataPartition(y = data_fit$classe, p = 0.5, list = FALSE)
training <- data_fit[a, ]
fitRF <- train(classe ~ ., data=training, method="rf", trControl=ctrl)
