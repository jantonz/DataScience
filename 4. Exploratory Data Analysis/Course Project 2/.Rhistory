t.test(allMPG, mu=12.0, alternative="two.sided")
info()
clear()
ls()
class(ls())
character(0)
bye
quit
exit
bye()
quit
exit
exit()
quit()
# modifying parent scope variable
new_counter <- function() {
i <- 0  # this is the variable being modified
function() {
i <<- i + 1  # modifies parent scope variable
i  # prints parent scope variable
}
}
counter_one <- new_counter()
counter_two <- new_counter()
counter_one()
counter_one()
counter_one()
counter_two()
counter_two()
counter_one
}
## Put comments here that give an overall description of what your
## functions do
#The first function takes a square (make sure it's square!) matrix and caches its inverse.
#The second one checks if there's the solution is already in the cache; if not
#
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinverse <- function(solve) inv <<- solve
getinverse <- function() inv
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinverse()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data, ...)
x$setinverse(inv)
inv
}
## Put comments here that give an overall description of what your
## functions do
#The first function takes a square (make sure it's square!) matrix and caches its inverse.
#The second one solves the square matrix only if there's no solution already cached.
## Write a short comment describing this function
#The first function takes a square (make sure it's square!) matrix and caches its inverse.
#It "hides" it in the "inv". The output of makeCacheMatrix is a named list of functions.
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinverse <- function(solve) inv <<- solve
getinverse <- function() inv
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
#The cacheSolve checks if the solution is already in the cache; if so, we return
#a message "getting cached data" and the value of "inv" ("inv" it's the inverse of
#our original matrix). If the solution is not in the cache, then we get the matrix
#with x$get(), we solve it and print it.
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinverse()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data, ...)
x$setinverse(inv)
print(inv)
}
a <- matrix(c(0.25, 0, 0, 0.25 ), 2,2)
a
cacheSolve(makeCacheMatrix(a))
cacheSolve(makeCacheMatrix(a))
cacheSolve(makeCacheMatrix(a))
b<-makeCacheMatrix(a)
b
a
cacheSolve(b)
cacheSolve(b)
setwd("~/Dropbox/PhD/FormaciÃ³/Coursera - Data Science Specialization/4. Exploratory Data Analysis/Course Project 2")
library(dplyr)
library(ggplot2)
#Reading the data
# This first line will likely take a few seconds. Be patient!
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#Subsetting Baltimore City
Baltimore <- filter(NEI, fips=="24510")
#Subsetting motor vehicles by "Onroad" category
Onroad <- filter(SCC, grepl("Onroad", SCC$Data.Category))
OnroadNEI <- NEI[NEI$SCC %in% Onroad$SCC , ]
SummaryOnroadNEI <- summarise(group_by(OnroadNEI, year), Total=sum(Emissions))
#Plotting
g <- qplot(year, Total, data=SummaryOnroadNEI)
g + geom_smooth(method="lm")+xlab("Year")+ylab("Total Emissions")+ggtitle("Total Motor-Related Emissions in Baltimore")
#Generating .png
dev.copy(png, file="plot5.png")
dev.off()
Baltimore <- filter(NEI, fips=="24510")
LA <- filter(NEI, fips == "06037")
dim(Baltimore); dim(LA)
#Subsetting Baltimore City
Baltimore <- filter(NEI, fips=="24510")
#Subsetting motor vehicles by "Onroad" category
Onroad <- filter(SCC, grepl("Onroad", SCC$Data.Category))
OnroadNEI <- Blatimore[Baltimore$SCC %in% Onroad$SCC , ]
SummaryOnroadNEI <- summarise(group_by(OnroadNEI, year), Total=sum(Emissions))
#Plotting
g <- qplot(year, Total, data=SummaryOnroadNEI)
g + geom_smooth(method="lm")+xlab("Year")+ylab("Total Emissions")+ggtitle("Total Motor-Related Emissions in Baltimore")
#Generating .png
dev.copy(png, file="plot5.png")
dev.off()
Onroad <- filter(SCC, grepl("Onroad", SCC$Data.Category))
OnroadNEI <- Blatimore[Baltimore$SCC %in% Onroad$SCC , ]
#Subsetting Baltimore City
Baltimore <- filter(NEI, fips=="24510")
#Subsetting motor vehicles by "Onroad" category
Onroad <- filter(SCC, grepl("Onroad", SCC$Data.Category))
OnroadNEI <- Baltimore[Baltimore$SCC %in% Onroad$SCC , ]
SummaryOnroadNEI <- summarise(group_by(OnroadNEI, year), Total=sum(Emissions))
#Plotting
g <- qplot(year, Total, data=SummaryOnroadNEI)
g + geom_smooth(method="lm")+xlab("Year")+ylab("Total Emissions")+ggtitle("Total Motor-Related Emissions in Baltimore")
#Generating .png
dev.copy(png, file="plot5.png")
dev.off()
#Subsetting Baltimore City and LA
Baltimore <- filter(NEI, fips=="24510")
LA <- filter(NEI, fips == "06037")
Onroad <- filter(SCC, grepl("Onroad", SCC$Data.Category))
OnroadBA <- Baltimore[Baltimore$SCC %in% Onroad$SCC , ]
OnroadLA <- LA[LA$SCC %in% Onroad$SCC , ]
OnroadLA
dim(OnroadBA); dim(OnroadLA)
g <- ggplot()
g
g <- ggplot(OnroadBA, aes(year, Emissions))
g
g+geom_point()
qplot(year, Emissions, data=OnroadBA, facets=.~2)
qplot(year, Emissions, data=OnroadBA, facets=.~)
qplot(year, Emissions, data=OnroadBA, facets=1~2)
qplot(year, Emissions, data=OnroadBA, facets=2)
qplot(year, Emissions, data=OnroadBA)
g
g+geom_point()
g <- ggplot()
geom_point()
g+geom_point()
?aes
g <- ggplot(OnroadBA)
g + ggplot(OnroadLA)
?plot
plot(OnroadBA$year, OnroadBA$Emissions)
par(mfrow=c(1,2))
plot(OnroadBA$year, OnroadBA$Emissions)
plot(OnroadLA$year, OnroadLA$Emissions)
par(mfrow=c(1,2))
qplot(year, Emissions, data=OnroadBA)
facet_grid(1,2)
facet_grid(rows=1,columns=2)
?facet_grid
par(mfrow=c(1,2))
plot(OnroadBA$year, OnroadBA$Emissions, "l", ylab="Motor-related Emissions", xlab="Year (Baltimore")
par(mfrow=c(1,2))
plot(OnroadBA$year, OnroadBA$Emissions, "l", ylab="Motor-related Emissions", xlab="Year (Baltimore)")
plot(OnroadLA$year, OnroadLA$Emissions, "l", ylab="Motor-related Emissions", xlab="Year (Los Angeles)")
#Plotting
par(mfrow=c(1,2))
plot(OnroadBA$year, OnroadBA$Emissions, ylab="Motor-related Emissions", xlab="Year (Baltimore)")
?plot
plot(OnroadBA$year, OnroadBA$Emissions, "b", ylab="Motor-related Emissions", xlab="Year (Baltimore)")
plot(OnroadBA$year, OnroadBA$Emissions, "h", ylab="Motor-related Emissions", xlab="Year (Baltimore)")
plot(OnroadBA$year, OnroadBA$Emissions, "s", ylab="Motor-related Emissions", xlab="Year (Baltimore)")
plot(OnroadBA$year, OnroadBA$Emissions, ylab="Motor-related Emissions", xlab="Year (Baltimore)")
#Plotting
par(mfrow=c(1,2))
plot(OnroadBA$year, OnroadBA$Emissions, ylab="Motor-related Emissions", xlab="Year (Baltimore)")
model <- lm(Emissions, year, OnroadBA)
abline(model, lwd=2)
plot(OnroadLA$year, OnroadLA$Emissions, ylab="Motor-related Emissions", xlab="Year (Los Angeles)")
model <- lm(Emissions, year, OnroadLA)
abline(model, lwd=2)
View(OnroadBA)
OnroadBA$Emissions
#Plotting
par(mfrow=c(1,2))
plot(OnroadBA$year, OnroadBA$Emissions, ylab="Motor-related Emissions", xlab="Year (Baltimore)")
model <- lm(Emissions, year, OnroadBA)
abline(model, lwd=2)
plot(OnroadLA$year, OnroadLA$Emissions, ylab="Motor-related Emissions", xlab="Year (Los Angeles)")
model <- lm(Emissions, year, OnroadLA)
abline(model, lwd=2)
?lm
#Plotting
par(mfrow=c(1,2))
plot(OnroadBA$year, OnroadBA$Emissions, ylab="Motor-related Emissions", xlab="Year (Baltimore)")
model <- lm(Emissions ~ year, OnroadBA)
abline(model, lwd=2)
plot(OnroadLA$year, OnroadLA$Emissions, ylab="Motor-related Emissions", xlab="Year (Los Angeles)")
model <- lm(Emissions ~ year, OnroadLA)
abline(model, lwd=2)
#Plotting
par(mfrow=c(1,2))
plot(OnroadBA$year, OnroadBA$Emissions, ylab="Motor-related Emissions", xlab="Year", mtext("Baltimore"))
model <- lm(Emissions ~ year, OnroadBA)
abline(model, lwd=2)
plot(OnroadLA$year, OnroadLA$Emissions, ylab="Motor-related Emissions", xlab="Year", mtext("Los Angeles"))
model <- lm(Emissions ~ year, OnroadLA)
abline(model, lwd=2)
#Subsetting motor vehicles by "Onroad" category
Onroad <- filter(SCC, grepl("Onroad", SCC$Data.Category))
OnroadBA <- Baltimore[Baltimore$SCC %in% Onroad$SCC , ]
OnroadLA <- LA[LA$SCC %in% Onroad$SCC , ]
#Plotting
par(mfrow=c(1,2))
plot(OnroadBA$year, OnroadBA$Emissions, ylab="Motor-related Emissions", xlab="Year", mtext("Baltimore"))
model <- lm(Emissions ~ year, OnroadBA)
abline(model, lwd=2)
plot(OnroadLA$year, OnroadLA$Emissions, ylab="Motor-related Emissions", xlab="Year", mtext("Los Angeles"))
model <- lm(Emissions ~ year, OnroadLA)
abline(model, lwd=2)
#Generating .png
dev.copy(png, file="plot6.png")
dev.off()
?mutate
plot(OnroadBA$year, OnroadBA$Emissions, ylab="Motor-related Emissions", xlab="Year", mtext("Baltimore"))
model <- lm(Emissions ~ year, OnroadBA)
par()
plot(OnroadBA$year, OnroadBA$Emissions, ylab="Motor-related Emissions", xlab="Year", mtext("Baltimore"))
model <- lm(Emissions ~ year, OnroadBA)
par(mfrow=1)
par(mfrow=c(1,1))
plot(OnroadBA$year, OnroadBA$Emissions, ylab="Motor-related Emissions", xlab="Year", mtext("Baltimore"))
model <- lm(Emissions ~ year, OnroadBA)
?points
points(OnroadLA$year, OnroadLA$Emissions)
View(OnroadBA)
View(OnroadLA)
BALA <- filter(NEI, fips=="24510"|fips == "06037")
View(BALA)
uinque(BALA$fips)
unique(BALA$fips)
Onroad <- filter(SCC, grepl("Onroad", SCC$Data.Category))
OnroadBALA <- BALA[BALA$SCC %in% Onroad$SCC , ]
OnroadBALA
View(OnroadBALA)
qplot(year, Emissions, data=OnroadBALA, color="fips")
class(BALA$fips)
as.factor(BALA$fips)
BALA$fips<- as.factor(BALA$fips)
qplot(year, Emissions, data=OnroadBALA, color="fips")
class(BALA$fips)
qplot(year, Emissions, data=OnroadBALA, color="fips")
qplot(year, Emissions, data=OnroadBALA, color=fips)
qplot(Emissions, data=OnroadBALA, geom="density", color=fips)
qplot(year, Emissions, data=OnroadBALA, color=fips)
g <- ggplot(year, Emissions, data=BALA)
g <- ggplot(BALA, aes(year, Emissions))
g+ geom_point(color=fips, size=4, alpha=1/3)
g <- ggplot(OnroadBALA, aes(year, Emissions))
g+ geom_point(color=fips, size=4, alpha=1/3)
OnroadBALA
?as.factor
?levels
levels(BALA$fips) <- c("Baltimore", "Los Angeles")
levels(BALA$fips)
g <- ggplot(OnroadBALA, aes(year, Emissions))
g+ geom_point(color=fips, size=4, alpha=1/3)
g+ geom_point(aes(color=fips), size=4, alpha=1/3)
levels(OnroadBALA$fips) <- c("Baltimore", "Los Angeles")
g <- ggplot(OnroadBALA, aes(year, Emissions))
g+ geom_point(aes(color=fips), size=4, alpha=1/3)
levels(OnroadBALA$fips)
BALA <- filter(NEI, fips=="24510"|fips == "06037")
Onroad <- filter(SCC, grepl("Onroad", SCC$Data.Category))
OnroadBALA <- BALA[BALA$SCC %in% Onroad$SCC , ]
OnroadBALA$fips<- as.factor(OnroadBALA$fips)
levels(OnroadBALA$fips) <- c("Baltimore", "Los Angeles")
g <- ggplot(OnroadBALA, aes(year, Emissions))
g + geom_point(aes(color=fips), size=4, alpha=1/3)
g + geom_smooth(method="lm")
g + geom_point(aes(color=fips), size=4, alpha=1/3)+geom_smooth(method="lm")
?geom_smooth
g + geom_point(aes(color=fips), size=4, alpha=1/3)+geom_smooth(method="lm")
Onroad <- filter(SCC, grepl("Onroad", SCC$Data.Category))
OnroadBALA <- BALA[BALA$SCC %in% Onroad$SCC , ]
OnroadBALA$fips<- as.factor(OnroadBALA$fips)
levels(OnroadBALA$fips) <- c("Baltimore", "Los Angeles")
g <- ggplot(OnroadBALA, aes(year, Emissions))
g + geom_point(aes(color=fips), size=4, alpha=1/3)+coord_cartesian(ylim=c(0,250))
g <- ggplot(OnroadBALA, aes(year, Emissions))
g + geom_point(aes(color=fips), size=4, alpha=1/3)+coord_cartesian(ylim=c(0,250))+geom_smooth(method="lm")
?split
split(OnroadBALA, fips)
split(OnroadBALA, OnroadBALA$fips)
BALAsplit<- split(OnroadBALA, OnroadBALA$fips)
View(BALAsplit)
head(BALAsplit)
class(BALAsplit)
dim(BALAsplit)
BALAsplit[[|]]
BALAsplit[[1]]
BALAsplit[[2]]
BALAsplit[[1]]
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions)
?sclae
?scale
qplot(BALAsplit)
qplot(BALAsplit[[1]])
par(mfrow=c(1,2))
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions, ylab="Emissions", xlab="Year", title="Baltimore")
title("Baltimore")
?axis
par(mfrow=c(1,2))
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions, ylab="Emissions", xlab="Year")
title("Baltimore")
#Plotting
par(mfrow=c(1,2))
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0, ymax)
title("Baltimore")
plot(BALAsplit[[2]]$year, BALAsplit[[2]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0, ymax)
title("Los Angeles")
#Plotting
par(mfrow=c(1,2))
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0, ymax))
title("Baltimore")
plot(BALAsplit[[2]]$year, BALAsplit[[2]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0, ymax))
title("Los Angeles")
#Plotting
par(mfrow=c(1,2))
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions, ylab="Emissions", xlab="Year")
title("Baltimore")
plot(BALAsplit[[2]]$year, BALAsplit[[2]]$Emissions, ylab="Emissions", xlab="Year")
title("Los Angeles")
BALAsplit[[1]]
BALAsplit[[2]]
BALAsplit[[1]]
BALAsplit[[2]]
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions, ylab="Emissions", xlab="Year")
plot(BALAsplit[[2]]$year, BALAsplit[[2]]$Emissions, ylab="Emissions", xlab="Year")
mean(BALAsplit[[2]]$Emissions)
mean(BALAsplit[[1]]$Emissions)
#Plotting
par(mfrow=c(1,2))
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0,600))
title("Baltimore")
plot(BALAsplit[[2]]$year, BALAsplit[[2]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0,600)
title("Los Angeles")
#Plotting
par(mfrow=c(1,2))
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0,600))
title("Baltimore")
plot(BALAsplit[[2]]$year, BALAsplit[[2]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0,600))
title("Los Angeles")
#Plotting
par(mfrow=c(1,2))
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0,600))
title("Baltimore")
model <- lm(Emissions ~ year, BALAsplit[[1]])
abline(model, lwd=4)
plot(BALAsplit[[2]]$year, BALAsplit[[2]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0,600))
title("Los Angeles")
model <- lm(Emissions ~ year, BALAsplit[[2]])
abline(model, lwd=4)
#Plotting
par(mfrow=c(1,2))
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0,600))
title("Baltimore")
model <- lm(Emissions ~ year, BALAsplit[[1]])
abline(model, lwd=1)
plot(BALAsplit[[2]]$year, BALAsplit[[2]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0,600))
title("Los Angeles")
model <- lm(Emissions ~ year, BALAsplit[[2]])
abline(model, lwd=1)
?abline
#Plotting
par(mfrow=c(1,2))
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0,600))
title("Baltimore")
model <- lm(Emissions ~ year, BALAsplit[[1]])
abline(model, lwd=2, \dots)
plot(BALAsplit[[2]]$year, BALAsplit[[2]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0,600))
title("Los Angeles")
model <- lm(Emissions ~ year, BALAsplit[[2]])
abline(model, lwd=2, \dots)
#Plotting
par(mfrow=c(1,2))
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0,600))
title("Baltimore")
model <- lm(Emissions ~ year, BALAsplit[[1]])
abline(model, lwd=2, col="red")
plot(BALAsplit[[2]]$year, BALAsplit[[2]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0,600))
title("Los Angeles")
model <- lm(Emissions ~ year, BALAsplit[[2]])
abline(model, lwd=2, col="red")
library(dplyr)
library(ggplot2)
#Reading the data
# This first line will likely take a few seconds. Be patient!
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
#Subsetting Baltimore City and LA
BALA <- filter(NEI, fips=="24510"|fips == "06037")
#Subsetting motor vehicles by "Onroad" category
Onroad <- filter(SCC, grepl("Onroad", SCC$Data.Category))
OnroadBALA <- BALA[BALA$SCC %in% Onroad$SCC , ]
OnroadBALA$fips<- as.factor(OnroadBALA$fips)
levels(OnroadBALA$fips) <- c("Baltimore", "Los Angeles")
BALAsplit<- split(OnroadBALA, OnroadBALA$fips)
#Plotting
par(mfrow=c(1,2))
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0,600))
title("Baltimore")
model <- lm(Emissions ~ year, BALAsplit[[1]])
abline(model, lwd=2, col="red")
plot(BALAsplit[[2]]$year, BALAsplit[[2]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0,600))
title("Los Angeles")
model <- lm(Emissions ~ year, BALAsplit[[2]])
abline(model, lwd=2, col="red")
#Generating .png
dev.copy(png, file="plot6.png")
dev.off()
#Plotting
par(mfrow=c(1,2))
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0,600))
title("Baltimore")
model <- lm(Emissions ~ year, BALAsplit[[1]])
abline(model, lwd=2, col="red")
plot(BALAsplit[[2]]$year, BALAsplit[[2]]$Emissions, ylab="Emissions", xlab="Year")
title("Los Angeles")
model <- lm(Emissions ~ year, BALAsplit[[2]])
abline(model, lwd=2, col="red")
#Plotting
par(mfrow=c(1,2))
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions, ylab="Emissions", xlab="Year")
title("Baltimore")
model <- lm(Emissions ~ year, BALAsplit[[1]])
abline(model, lwd=2, col="red")
plot(BALAsplit[[2]]$year, BALAsplit[[2]]$Emissions, ylab="Emissions", xlab="Year")
title("Los Angeles")
model <- lm(Emissions ~ year, BALAsplit[[2]])
abline(model, lwd=2, col="red")
#Plotting
par(mfrow=c(1,2))
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0,600))
title("Baltimore")
model <- lm(Emissions ~ year, BALAsplit[[1]])
abline(model, lwd=2, col="red")
plot(BALAsplit[[2]]$year, BALAsplit[[2]]$Emissions, ylab="Emissions", xlab="Year")
title("Los Angeles")
model <- lm(Emissions ~ year, BALAsplit[[2]])
abline(model, lwd=2, col="red")
?par
#Plotting
par(mfrow=c(2,2))
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0,600))
title("Baltimore")
model <- lm(Emissions ~ year, BALAsplit[[1]])
abline(model, lwd=2, col="red")
plot(BALAsplit[[2]]$year, BALAsplit[[2]]$Emissions, ylab="Emissions", xlab="Year")
title("Los Angeles")
model <- lm(Emissions ~ year, BALAsplit[[2]])
abline(model, lwd=2, col="red")
#Generating .png
dev.copy(png, file="plot6.png")
dev.off()
#Plotting
par(mfrow=c(1,2))
plot(BALAsplit[[1]]$year, BALAsplit[[1]]$Emissions, ylab="Emissions", xlab="Year", ylim=c(0,600))
title("Baltimore")
model <- lm(Emissions ~ year, BALAsplit[[1]])
abline(model, lwd=2, col="red")
plot(BALAsplit[[2]]$year, BALAsplit[[2]]$Emissions, ylab="Emissions", xlab="Year")
title("Los Angeles")
model <- lm(Emissions ~ year, BALAsplit[[2]])
abline(model, lwd=2, col="red")
#Generating .png
dev.copy(png, file="plot6.png")
dev.off()
